#!/bin/sh
#
#= Evutils - Programs Library
#
# Library to query programs.



. "$EVUTILS_HOME/lib/cache"
. "$EVUTILS_HOME/lib/list"

# Programs binaries that are viable as desktop applications.
EVUTILS_DATA_DESKTOP_APPLICATIONS="$EVUTILS_HOME/lib/data/desktop-applications"
# Programs binaries that are terminal applications.
EVUTILS_DATA_TERMINAL_APPLICATIONS="$EVUTILS_HOME/lib/data/terminal-applications"

# Returns true if the program is installed.
# @param {program} 1 The program to check.
# @returns {bool} True if the program installed and false otherwise.
#
is_installed() {
    if command -v "$1" >/dev/null 2>&1; then
        return 0
    else
        return 1
    fi
}

# Returns true if the program is not installed.
# @param {program} 1 The program to check.
# @returns {bool} True if program is not installed and false otherwise.
#
is_not_installed() {
    if command -v "$1" >/dev/null 2>&1; then
        return 1
    else
        return 0
    fi
}

# Sync / update the $EVUTILS_PROGRAM_CACHE of installed binaries in $PATH.
#
sync_program_cache() {
    create_cache_dir
    tmp=$(mktemp)
    IFS=:
    find -L $PATH -maxdepth 1 -type f -perm -100 -printf "%f\n" 2>/dev/null | sort -u > "$tmp"
    unset IFS
    if ! cmp --silent "$EVUTILS_PROGRAM_CACHE" "$tmp"; then
        cp "$tmp" "$EVUTILS_PROGRAM_CACHE"
    fi
    rm -f -- "$tmp"
}

# Get only the programs that are viable as desktop applications.
# @returns {list} Desktop applications binaries.
#
get_desktop_applications() {
    sync_program_cache
    grep -Fx -f "$EVUTILS_DATA_DESKTOP_APPLICATIONS" "$EVUTILS_PROGRAM_CACHE"
}

# Get executables from directories.
# @param {path} --dir Directory to search in.
# @returns {list} List of executables inside the directories. These only returns
# the base name of the executables and not their absolute paths.
#
get_programs_from_directories() {
    dirs=""

    while [ "$1" ]; do
        case $1 in
            --dir)
                if [ -d "$2" ]; then
                    dirs=$(list_cat "$dirs" "$2" ":")
                fi
                shift
                ;;
        esac

        shift
    done

    if [ "$dirs" ]; then
        IFS=:
        find -L $dirs -maxdepth 1 -type f -perm -100 -printf "%f\n" 2>/dev/null | sort -u
        unset IFS
    fi
}

# Returns true if it's a terminal application and false otherwise.
# @param {program} 1 The program
# @returns {bool} True if it's a terminal application and false otherwise.
#
is_terminal_application() {
    if grep -Fqx "$1" -- "$EVUTILS_DATA_TERMINAL_APPLICATIONS"; then
        return 0
    else
        return 1
    fi
}

# Gets all available man pages.
# @returns {list} Man pages.
#
get_man_pages() {
    man -k . | awk '{print $1}'
}

# Returns true if it is a valid man page and false otherwise.
# @param {string} 1 Man page
# @returns {bool} True if it is a valid man page and false otherwise.
#
is_man_page() {
    if get_man_pages | grep -Fqx -e "$1"; then
        return 0
    else
        return 1
    fi
}

